*** Begin Patch
*** Delete File: .github/workflows/ci.yml
*** End Patch

*** Begin Patch
*** Add File: .github/workflows/ci.yml
+name: CI
+
+on:
+  push:
+    branches: [ main ]
+  pull_request:
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    env:
+      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
+      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
+      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
+      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
+    steps:
+      - uses: actions/checkout@v4
+
+      - name: Set up Node.js
+        uses: actions/setup-node@v4
+        with:
+          node-version: 20
+
+      - name: Cache npm
+        uses: actions/cache@v3
+        with:
+          path: ~/.npm
+          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
+          restore-keys: |
+            ${{ runner.os }}-node-
+
+      - name: Configure npm registry (if token provided)
+        if: ${{ secrets.NPM_TOKEN != '' }}
+        env:
+          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
+        run: |
+          npm config set //registry.npmjs.org/:_authToken="$NPM_TOKEN"
+          npm config set registry https://registry.npmjs.org/
+
+      - name: Install dependencies
+        run: npm ci --no-audit --no-fund
+
+      - name: Install Supabase CLI
+        uses: supabase/setup-cli@v1
+        with:
+          version: latest
+
+      - name: Print tool versions
+        run: |
+          node -v
+          npm -v
+          supabase --version || true
+          psql --version || true
+
+      - name: Run database migrations
+        if: ${{ env.SUPABASE_DB_URL != '' && env.SUPABASE_SERVICE_ROLE_KEY != '' }}
+        env:
+          SUPABASE_DB_URL: ${{ env.SUPABASE_DB_URL }}
+        run: |
+          set -euo pipefail
+          supabase db push --db-url "$SUPABASE_DB_URL" || {
+            echo "::warning::supabase db push failed; applying SQL files via psql"
+            if ! command -v psql >/dev/null 2>&1; then
+              sudo apt-get update && sudo apt-get install -y postgresql-client
+            fi
+            for file in sql/*.sql; do
+              [ -f "$file" ] && psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -f "$file"
+            done
+          }
+
+      - name: Skip migrations (secrets not provided)
+        if: ${{ !(env.SUPABASE_DB_URL != '' && env.SUPABASE_SERVICE_ROLE_KEY != '') }}
+        run: echo "::warning::Skipping DB migrations: secrets not provided"
+
+      - name: Lint
+        run: npm run lint --if-present
+
+      - name: Test
+        run: npm test --if-present
+
+      - name: Build
+        run: npm run build --if-present
+
*** End Patch

*** Begin Patch
*** Add File: sql/20251004__affiliate_store_settings_policies.sql
+-- تأكيد وجود الجدول قبل إنشاء السياسة
+DO $$
+BEGIN
+  IF NOT EXISTS (
+    SELECT 1 FROM information_schema.tables
+    WHERE table_schema = 'public' AND table_name = 'affiliate_store_settings'
+  ) THEN
+    RAISE EXCEPTION 'Table affiliate_store_settings does not exist';
+  END IF;
+END$$;
+
+-- إزالة أي سياسة قديمة متعارضة
+DROP POLICY IF EXISTS anon_can_read_active_store_settings ON public.affiliate_store_settings;
+
+-- السماح للزوار بقراءة إعدادات المتاجر المفعّلة فقط
+CREATE POLICY anon_can_read_active_store_settings
+ON public.affiliate_store_settings
+FOR SELECT
+TO anon
+USING (
+  EXISTS (
+    SELECT 1
+    FROM public.affiliate_stores s
+    WHERE s.id = affiliate_store_settings.affiliate_store_id
+      AND s.is_active = true
+  )
+);
*** End Patch

*** Begin Patch
*** Add File: src/lib/sessionId.ts
+export function getSessionId() {
+  try {
+    let id = localStorage.getItem('session_id');
+    if (!id) {
+      id = crypto.randomUUID();
+      localStorage.setItem('session_id', id);
+    }
+    return id;
+  } catch {
+    // SSR أو متصفح بلا localStorage
+    return 'anon-' + Math.random().toString(36).slice(2);
+  }
+}
*** End Patch

*** Begin Patch
*** Update File: src/lib/supabaseClient.ts
@@
-import { createClient } from '@supabase/supabase-js';
+import { createClient } from '@supabase/supabase-js';
+import { getSessionId } from './sessionId';

-const supabaseUrl = import.meta.env.VITE_SUPABASE_URL!;
-const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY!;
-
-export const supabase = createClient(supabaseUrl, supabaseAnonKey);
+const supabaseUrl = import.meta.env.VITE_SUPABASE_URL!;
+const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY!;
+
+export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
+  global: {
+    headers: { 'x-session-id': getSessionId() }
+  }
+});
*** End Patch

*** Begin Patch
*** Add File: src/features/cart/useCart.ts
+import { useEffect, useState, useCallback } from 'react';
+import { supabase } from '@/lib/supabaseClient';
+
+type Cart = { id: string; session_id: string };
+type CartItem = {
+  id: string;
+  cart_id: string;
+  product_id: string;
+  quantity: number;
+  price: number;
+};
+
+export function useCart() {
+  const [cart, setCart] = useState<Cart | null>(null);
+  const [items, setItems] = useState<CartItem[]>([]);
+  const [loading, setLoading] = useState(true);
+
+  const loadCart = useCallback(async () => {
+    setLoading(true);
+    // get or create cart
+    const { data: carts, error: cErr } = await supabase
+      .from('shopping_carts')
+      .select('*')
+      .limit(1);
+    if (cErr) {
+      setLoading(false);
+      throw cErr;
+    }
+    let current = carts?.[0] as Cart | undefined;
+    if (!current) {
+      const { data, error } = await supabase
+        .from('shopping_carts')
+        .insert({})
+        .select()
+        .single();
+      if (error) {
+        setLoading(false);
+        throw error;
+      }
+      current = data as Cart;
+    }
+    setCart(current);
+    // get items
+    const { data: cs, error: iErr } = await supabase
+      .from('cart_items')
+      .select('*')
+      .eq('cart_id', current.id);
+    if (iErr) {
+      setLoading(false);
+      throw iErr;
+    }
+    setItems(cs as CartItem[]);
+    setLoading(false);
+  }, []);
+
+  useEffect(() => {
+    loadCart().catch(console.error);
+  }, [loadCart]);
+
+  const addItem = useCallback(
+    async (product_id: string, price: number, qty = 1) => {
+      if (!cart) return;
+      const existing = items.find((i) => i.product_id === product_id);
+      if (existing) {
+        const { data, error } = await supabase
+          .from('cart_items')
+          .update({ quantity: existing.quantity + qty })
+          .eq('id', existing.id)
+          .select()
+          .single();
+        if (error) throw error;
+        setItems((prev) =>
+          prev.map((i) => (i.id === existing.id ? (data as any) : i))
+        );
+      } else {
+        const { data, error } = await supabase
+          .from('cart_items')
+          .insert({ cart_id: cart.id, product_id, quantity: qty, price })
+          .select()
+          .single();
+        if (error) throw error;
+        setItems((prev) => [...prev, data as any]);
+      }
+    },
+    [cart, items]
+  );
+
+  const updateQty = useCallback(async (item_id: string, qty: number) => {
+    const { data, error } = await supabase
+      .from('cart_items')
+      .update({ quantity: qty })
+      .eq('id', item_id)
+      .select()
+      .single();
+    if (error) throw error;
+    setItems((prev) =>
+      prev.map((i) => (i.id === item_id ? (data as any) : i))
+    );
+  }, []);
+
+  const removeItem = useCallback(async (item_id: string) => {
+    const { error } = await supabase
+      .from('cart_items')
+      .delete()
+      .eq('id', item_id);
+    if (error) throw error;
+    setItems((prev) => prev.filter((i) => i.id !== item_id));
+  }, []);
+
+  const clearCart = useCallback(async () => {
+    if (!cart) return;
+    const { error } = await supabase
+      .from('cart_items')
+      .delete()
+      .eq('cart_id', cart.id);
+    if (error) throw error;
+    setItems([]);
+  }, [cart]);
+
+  const total = items.reduce((s, i) => s + i.price * i.quantity, 0);
+
+  return {
+    loading,
+    cart,
+    items,
+    addItem,
+    updateQty,
+    removeItem,
+    clearCart,
+    total,
+  };
+}
*** End Patch

*** Begin Patch
*** Add File: src/features/auth/CustomerAuth.tsx
+import { useState } from 'react';
+import { supabase } from '@/lib/supabaseClient';
+
+export default function CustomerAuth() {
+  const [email, setEmail] = useState('');
+  const [sent, setSent] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+  async function sendMagicLink(e: React.FormEvent) {
+    e.preventDefault();
+    setError(null);
+    const { error } = await supabase.auth.signInWithOtp({
+      email,
+      options: { shouldCreateUser: true },
+    });
+    if (error) {
+      setError(error.message);
+    } else {
+      setSent(true);
+    }
+  }
+  return (
+    <div className="max-w-md mx-auto p-6 bg-glass rounded-2xl border border-white/10 backdrop-blur">
+      <h1 className="text-2xl font-semibold mb-3">تسجيل الدخول للعميل</h1>
+      <p className="text-sm text-muted-foreground mb-6">
+        أدخل بريدك الإلكتروني لإستلام رابط تسجيل الدخول.
+      </p>
+      <form onSubmit={sendMagicLink} className="space-y-3">
+        <input
+          type="email"
+          required
+          value={email}
+          onChange={(e) => setEmail(e.target.value)}
+          placeholder="you@example.com"
+          className="w-full rounded-lg border px-4 py-3 bg-background/60"
+        />
+        <button className="btn-primary w-full py-3 rounded-lg">
+          إرسال رابط الدخول
+        </button>
+      </form>
+      {sent && <p className="mt-4 text-emerald-600">تم الإرسال! تفقد بريدك.</p>}
+      {error && <p className="mt-4 text-rose-600">{error}</p>}
+    </div>
+  );
+}
*** End Patch

*** Begin Patch
*** Update File: tailwind.config.js
@@
-  theme: {
+  theme: {
     extend: {
+      colors: {
+        background: '#0B1215',
+        foreground: '#E7ECEF',
+        primary: {
+          DEFAULT: '#0F766E',
+          foreground: '#E7ECEF',
+          500: '#0F766E',
+          400: '#14B8A6',
+        },
+        muted: {
+          DEFAULT: '#0f171b',
+          foreground: '#9AA4A8',
+        },
+      },
+      borderRadius: {
+        xl: '1rem',
+        '2xl': '1.25rem',
+      },
+      boxShadow: {
+        glass: '0 8px 32px rgba(0,0,0,0.35)',
+      },
+      backdropBlur: {
+        xs: '2px',
+      },
     },
   },
*** End Patch

*** Begin Patch
*** Update File: src/styles/globals.css
@@
-html, body { background: #ffffff; }
+html,
+body {
+  background: #0B1215;
+  color: #E7ECEF;
+}
+
+.bg-glass {
+  background: linear-gradient(
+    180deg,
+    rgba(255, 255, 255, 0.06),
+    rgba(255, 255, 255, 0.03)
+  );
+  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.35);
+  border: 1px solid rgba(255, 255, 255, 0.08);
+  backdrop-filter: blur(8px);
+}
+
+.btn-primary {
+  background: linear-gradient(135deg, #0f766e, #14b8a6);
+  color: #e7ecef;
+  font-weight: 600;
+  transition: transform 0.15s ease, filter 0.15s ease;
+}
+.btn-primary:hover {
+  transform: translateY(-1px);
+  filter: brightness(1.05);
+}
+
+.badge-discount {
+  background: rgba(244, 63, 94, 0.15);
+  color: #f43f5e;
+  font-weight: 600;
+  border: 1px solid rgba(244, 63, 94, 0.35);
+  border-radius: 0.5rem;
+  padding: 0.125rem 0.5rem;
+}
+
+.card {
+  background: linear-gradient(
+    180deg,
+    rgba(255, 255, 255, 0.04),
+    rgba(255, 255, 255, 0.02)
+  );
+  border: 1px solid rgba(255, 255, 255, 0.08);
+  border-radius: 1rem;
+}
*** End Patch

*** Begin Patch
*** Update File: src/components/layout/Navbar.tsx
@@
-import { Link } from 'react-router-dom';
+import { Link } from 'react-router-dom';
 
 export default function Navbar() {
   return (
-    <header className="bg-white shadow">
-      <nav className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8" aria-label="Top">
-        {/* ... */}
-      </nav>
-    </header>
+    <header className="sticky top-0 z-40">
+      <div className="h-0.5 bg-gradient-to-r from-primary-400 via-emerald-400/60 to-primary-400"></div>
+      <nav className="bg-glass backdrop-blur px-4 sm:px-6">
+        <div className="max-w-7xl mx-auto flex h-16 items-center justify-between">
+          <Link to="/" className="text-lg font-semibold tracking-wide">
+            سوال شامل
+          </Link>
+          <div className="hidden md:flex gap-6 text-sm text-muted-foreground">
+            <Link to="/store" className="hover:text-foreground">
+              المتجر
+            </Link>
+            <Link to="/alliances" className="hover:text-foreground">
+              التحالفات
+            </Link>
+            <Link to="/leaderboard" className="hover:text-foreground">
+              المتصدرون
+            </Link>
+          </div>
+          <div className="flex items-center gap-2">
+            <Link to="/account" className="text-sm hover:text-foreground">
+              حسابي
+            </Link>
+            <Link
+              to="/cart"
+              className="ml-2 rounded-xl px-3 py-2 bg-white/5 hover:bg-white/10 border border-white/10"
+            >
+              السلة
+            </Link>
+          </div>
+        </div>
+      </nav>
+    </header>
   );
 }
*** End Patch

*** Begin Patch
*** Add File: src/components/layout/MobileNav.tsx
+import { Link, useLocation } from 'react-router-dom';
+
+const tabs = [
+  { to: '/', label: 'الرئيسية' },
+  { to: '/store', label: 'المتجر' },
+  { to: '/search', label: 'بحث' },
+  { to: '/cart', label: 'السلة' },
+];
+
+export default function MobileNav() {
+  const { pathname } = useLocation();
+  return (
+    <nav className="md:hidden fixed bottom-3 inset-x-3 z-40 bg-glass rounded-2xl backdrop-blur px-2 py-1 border border-white/10">
+      <ul className="flex justify-between">
+        {tabs.map((t) => {
+          const active = pathname === t.to;
+          return (
+            <li key={t.to}>
+              <Link
+                to={t.to}
+                className={`px-3 py-2 rounded-xl text-sm ${
+                  active
+                    ? 'bg-white/10 border border-white/10'
+                    : 'text-muted-foreground'
+                }`}
+              >
+                {t.label}
+              </Link>
+            </li>
+          );
+        })}
+      </ul>
+    </nav>
+  );
+}
*** End Patch

*** Begin Patch
*** Add File: src/components/sections/Hero.tsx
+export default function Hero() {
+  return (
+    <section className="relative overflow-hidden">
+      <div className="absolute inset-0 -z-10 bg-[radial-gradient(1200px_600px_at_50%_-200px,rgba(20,184,166,.25),transparent)]" />
+      <div className="max-w-7xl mx-auto px-4 sm:px-6 py-16 sm:py-24">
+        <div className="max-w-2xl">
+          <h1 className="text-3xl sm:text-5xl font-semibold leading-tight">
+            تسوّق بذكاء، اربح أكثر.
+          </h1>
+          <p className="mt-4 text-muted-foreground">
+            منصة تجارة متكاملة للمسوّقين والمتاجر. واجهة فاخرة، أداء عالي، وتجربة
+            مخصصة.
+          </p>
+          <div className="mt-8 flex gap-3">
+            <a
+              href="/store"
+              className="btn-primary rounded-xl px-5 py-3"
+            >
+              تسوّق الآن
+            </a>
+            <a
+              href="/alliances"
+              className="rounded-xl px-5 py-3 bg-white/5 border border-white/10 hover:bg-white/10"
+            >
+              اكتشف التحالفات
+            </a>
+          </div>
+        </div>
+      </div>
+    </section>
+  );
+}
*** End Patch

*** Begin Patch
*** Update File: src/components/product/ProductCard.tsx
@@
 type Props = {
   product: { id: string; name: string; image?: string; price: number; price_compare?: number; rating?: number; };
   onAdd: (id: string, price: number) => void;
 };
 export default function ProductCard({ product, onAdd }: Props) {
-  // ... 
-  return (...);
+  const discount =
+    product.price_compare && product.price_compare > product.price
+      ? Math.round(
+          (1 - product.price / (product.price_compare ?? product.price)) * 100
+        )
+      : 0;
+  return (
+    <div className="card p-3 hover:scale-[1.01] transition">
+      <div className="aspect-square rounded-xl overflow-hidden bg-black/20">
+        {product.image ? (
+          <img
+            src={product.image}
+            alt={product.name}
+            className="w-full h-full object-cover"
+          />
+        ) : (
+          <div className="w-full h-full grid place-items-center text-muted-foreground">
+            No Image
+          </div>
+        )}
+      </div>
+      <div className="mt-3">
+        <h3 className="font-medium">{product.name}</h3>
+        <div className="mt-1 flex items-center gap-2">
+          <span className="text-lg font-semibold">
+            {product.price.toFixed(2)} ر.س
+          </span>
+          {discount > 0 && (
+            <>
+              <span className="line-through text-muted-foreground">
+                {product.price_compare?.toFixed(2)} ر.س
+              </span>
+              <span className="badge-discount">-{discount}%</span>
+            </>
+          )}
+        </div>
+        {product.rating && product.rating > 0 && (
+          <div
+            className="mt-1 text-amber-500"
+            aria-label={`تقييم ${product.rating} من 5`}
+          >
+            {'★'.repeat(Math.round(product.rating))}
+            {'☆'.repeat(5 - Math.round(product.rating))}
+          </div>
+        )}
+        <button
+          className="btn-primary w-full mt-3 rounded-xl py-2.5"
+          onClick={() => onAdd(product.id, product.price)}
+        >
+          أضف للسلة
+        </button>
+      </div>
+    </div>
+  );
 }
*** End Patch

*** Begin Patch
*** Update File: src/AppShell.tsx
@@
-export default function AppShell({ children }: { children: React.ReactNode }) {
-  return (
-    <>
-      {/* old content */}
-      {children}
-      {/* old content */}
-    </>
-  );
-}
+export default function AppShell({ children }: { children: React.ReactNode }) {
+  return (
+    <div
+      dir="rtl"
+      className="min-h-screen bg-[linear-gradient(180deg,#0B1215,#0E1418)]"
+    >
+      {/* Navbar imported elsewhere */}
+      <main className="pb-24">{children}</main>
+      {/* MobileNav imported elsewhere */}
+    </div>
+  );
+}
*** End Patch
